name: Production Deployment
on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
      - '.github/workflows/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List directory content for debugging
        run: |
          pwd
          ls -la
          echo "-------------------"
          ls -la api || echo "api directory not found"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate version tag
        id: version
        run: |
          VERSION=$(date +'%Y%m%d')-$(git rev-parse --short HEAD)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        env:
          ACR_REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
          ACR_REPOSITORY: genai-v2
          VERSION: ${{ steps.version.outputs.version }}
        working-directory: ./api
        run: |
          docker build -t $ACR_REGISTRY/$ACR_REPOSITORY:$VERSION -t $ACR_REGISTRY/$ACR_REPOSITORY:production .
          docker push $ACR_REGISTRY/$ACR_REPOSITORY:$VERSION
          docker push $ACR_REGISTRY/$ACR_REPOSITORY:production
          echo "Pushed version: $VERSION"

  deployment:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOSTNAME }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SERVER_KEY }}
          command_timeout: 25m
          envs: VERSION
          script: |
            cd ~/genai-v2
            
            docker compose pull api worker
            docker compose up -d api worker

            docker system prune -f
  
            docker ps